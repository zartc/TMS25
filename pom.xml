<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>zc.study.tms25</groupId>
	<artifactId>TMS25</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>

	<description>
		This project is a technical demonstration of a
		- multi-modules Servlet-2.5 web application,
		- targeted to run on Tomcat 7 or 8,
		- built with Maven
		- using MyBatis and Struts (or Stripes in a next version)
		(TMS stands for Tomcat-MyBatis-Stripes)
	</description>

	<prerequisites>
		<maven>3.3.0</maven>
	</prerequisites>

	<modules>
		<module>TMS25-core</module>
		<module>TMS25-web</module>
		<module>TMS25-extlibs</module>
		<!-- the TSM25-distro module is only added when running the "dist" profile; see at the bottom of the file -->
	</modules>

	<properties>
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- stay at servlet 2.5 / jsp 2.1 level -->
		<servlet.version>2.5</servlet.version>
		<jsp.version>2.1</jsp.version>
		<jstl.version>1.2</jstl.version>

		<stripes.version>1.5.8</stripes.version>
		<struts.version>1.3.10</struts.version>

		<mybatis.version>3.2.8</mybatis.version>
		<mybatis-spring.version>3.2.8</mybatis-spring.version>

		<ojdbc7.version>12.1.0.2</ojdbc7.version>
		<log4j.version>2.3</log4j.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- utilities libraries like apache commons, logging libraries, testing libraries
			should come high in the list to force Maven to use the specified version. -->

			<!-- commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>4.0</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>

			<!-- @Inject -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>

			<!-- logging -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-web</artifactId>
				<version>${log4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-jcl</artifactId>
				<version>${log4j.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>

			<!-- Stripes -->
			<dependency>
				<groupId>net.sourceforge.stripes</groupId>
				<artifactId>stripes</artifactId>
				<version>${stripes.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Struts -->
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts-core</artifactId>
				<version>${struts.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts-extras</artifactId>
				<version>${struts.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts-taglib</artifactId>
				<version>${struts.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts-tiles</artifactId>
				<version>${struts.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts-el</artifactId>
				<version>${struts.version}</version>
			</dependency>

			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- myBatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>

			<!-- Database -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>2.0</version>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc7</artifactId>
				<version>${ojdbc7.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- testing -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.7</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>bsh</artifactId>
						<groupId>org.beanshell</groupId>
					</exclusion>
					<exclusion>
						<artifactId>snakeyaml</artifactId>
						<groupId>org.yaml</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>2.0.0</version>
				<scope>test</scope>
			</dependency>
			
<!-- 			<dependency> -->
<!-- 				<groupId>org.mockito</groupId> -->
<!-- 				<artifactId>mockito-all</artifactId> -->
<!-- 				<version>1.10.13</version> -->
<!-- 				<scope>test</scope> -->
<!-- 			</dependency> -->
		</dependencies>
	</dependencyManagement>

	<!-- dependencies included in all modules -->
	<dependencies>
		<!-- logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>org.mockito</groupId> -->
<!-- 			<artifactId>mockito-all</artifactId> -->
<!-- 			<scope>test</scope> -->
<!-- 		</dependency> -->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<verbose>true</verbose>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only.
					It has no influence on the Maven build itself.
					It must be in the build/pluginManagement section -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>org.apache.maven.plugins</groupId>
											<artifactId>maven-toolchains-plugin</artifactId>
											<versionRange>[1.1,)</versionRange>
											<goals>
												<goal>toolchain</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<ignore></ignore>
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>

			<plugins>
			<!-- This plugin ensure that we control which version of JDK
			is used to compile java sources and run UnitTests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-toolchains-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<goals>
							<goal>toolchain</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<toolchains>
						<jdk>
							<version>${java.version}</version>
							<vendor>sun</vendor>
						</jdk>
					</toolchains>
				</configuration>
			</plugin>

			<!-- This plugin can influence the way eclipse handle maven projects -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<!-- configure Eclipse projects to automaticly download and attach sources to libraries -->
					<downloadSources>true</downloadSources>
					<!-- same for javadoc - rarely used since eclipse can recreate javadoc from the sources -->
					<downloadJavadocs>false</downloadJavadocs>

					<!--
						When set to true (default): dependencies between modules will be resolved
						as direct project dependencies in Eclipse. That is any code change in a
						subproject will be immediatly visible to dependant projects in the same
						workspace. This is a great option to use while in developement.
						When set to false, eclipse will not link to existing subproject and
						instead reference installed jar in the local repository. That is any code
						change in a subproject will not be visible to dependant projects until the
						changed module is packaged and installed in the local repository.
					-->
					<useProjectReferences>true</useProjectReferences>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>m2e</id>
			<!-- This profile is only activated when building in Eclipse with m2e -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
		</profile>

		<profile>
			<id>dist</id>
			<modules>
				<module>TMS25-distro</module>
			</modules>
		</profile>
	</profiles>
</project>
